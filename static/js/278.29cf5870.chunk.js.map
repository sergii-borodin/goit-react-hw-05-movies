{"version":3,"file":"static/js/278.29cf5870.chunk.js","mappings":"8SAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,mBAJX,aAIW,oBAAuCD,IAD7B,cAC3BG,EAD2B,yBAG1BA,EAASC,MAHiB,2CAAH,qDAMnBC,EAAc,mCAAG,WAAMC,GAAN,uFACLL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAsCN,IADjC,cACtBG,EADsB,yBAGrBA,EAASC,MAHY,2CAAH,sDAMdG,EAAsB,mCAAG,WAAMD,GAAN,uFACbL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACeN,IAFF,cAC9BG,EAD8B,yBAI7BA,EAASC,MAJoB,2CAAH,sDAOtBI,EAAyB,mCAAG,WAAMF,GAAN,uFAChBL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACeN,IAFC,cACjCG,EADiC,yBAKhCA,EAASC,MALuB,2CAAH,sDAQzBK,EAAiB,mCAAG,WAAMC,GAAN,uFACRT,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACoBU,EADpB,oBADQ,cACzBP,EADyB,yBAKxBA,EAASC,MALe,2CAAH,qD,uGCqB9B,UAlDe,SAAAO,GACb,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOF,EAAP,KAAkBK,EAAlB,KACA,GAA4BH,EAAAA,EAAAA,UAAS,IAArC,eAAOI,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAkB,KAAdR,EAAJ,CAGA,IAAMS,EAAe,mCAAG,WAAMT,GAAN,kGAEMU,EAAAA,GAA6BV,GAFnC,gBAEZW,EAFY,EAEZA,QACRC,QAAQC,IAAI,UAAWF,GACvBJ,EAAUI,GAJU,yGAAH,sDAQrBF,EAAgBT,EATf,CAUF,GAAE,CAACA,IAWJ,OACE,iCACE,kBAAMc,SAXW,SAAAC,GACnBA,EAAEC,iBACFX,EAAaF,EACd,EAQG,WACE,6CAEE,kBAAOc,KAAK,OAAOC,MAAOf,EAAYgB,SATxB,SAAAJ,GACpBX,EAAcW,EAAEK,OAAOF,MACxB,QASK,mBAAQD,KAAK,SAAb,wBAGF,wBACGX,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAb,SAAoBD,KADbC,EADC,QAQnB,C","sources":["ApiService.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9fbe85233379d275904e898da5aa337c';\nconst query = 'movie/week';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/${query}?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nexport const fetchCastInfoByMovieId = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsInfoByMovieId = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return response.data;\n};\n\nexport const fetchMoviesByName = async movieName => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${movieName}&language=en-US`\n  );\n\n  return response.data;\n};\n","import React, { useState, useEffect } from 'react';\nimport * as ApiService from '../../ApiService';\nimport { Link } from 'react-router-dom';\n\nconst Movies = props => {\n  const [inputValue, setInputValue] = useState('');\n  const [movieName, setMovieName] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    const getMoviesByName = async movieName => {\n      try {\n        const { results } = await ApiService.fetchMoviesByName(movieName);\n        console.log('results', results);\n        setMovies(results);\n      } catch (error) {}\n    };\n\n    getMoviesByName(movieName);\n  }, [movieName]);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    setMovieName(inputValue);\n  };\n\n  const onInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={onFormSubmit}>\n        <label>\n          Search movie\n          <input type=\"text\" value={inputValue} onChange={onInputChange} />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <ul>\n        {movies.map(({ original_title, id }) => (\n          <li key={id}>\n            <Link to={`${id}`}>{original_title}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","fetchTrendingMovies","response","data","fetchMovieById","movieId","fetchCastInfoByMovieId","fetchReviewsInfoByMovieId","fetchMoviesByName","movieName","props","useState","inputValue","setInputValue","setMovieName","movies","setMovies","useEffect","getMoviesByName","ApiService","results","console","log","onSubmit","e","preventDefault","type","value","onChange","target","map","original_title","id","to"],"sourceRoot":""}